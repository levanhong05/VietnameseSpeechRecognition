#!/usr/local/bin/perl

#  generate an HHEd script file for state-clustering triphones
#   
#  usage: mkclscript.prl command threshold monophone_list
#
#  where monophone_list is a HMM list for the phones (not triphones) 
#        to be clustered
#
# Script generates a specified command and threhold for a cluster
# corresponding to each states of each phone. 
# The script assumes each model has 3 emitting states.
#
# Copyright (c) Phil Woodland, 1993
# Last Updated 5/9/95
#
# convert to perl by TL 7/1998
#

my ($command,$threshold,$monophones,$tree);

if ( @ARGV != 4 ) {
   print "usage: $0 command threshold monophone_list tree\n";
   exit(1);
}

($command,$threshold,$monophones,$tree) = @ARGV;

if (! -f $monophones) {
   die "mkclscript: monophone HMM list $monophones not found\n";
}

open (TREE,">$tree") || die ("Unable to open $tree file for writing");

open(HMMLIST,"<$monophones") || die ("Unable to open $monophones file for reading");
while(<HMMLIST>) {
    chop;
    print TREE "$command $threshold \"ST_$_"."_2_\" {(\"$_\",\"*-$_\+*\",\"$_\+*\",\"*-$_\").state[2]}\n";
}

open(HMMLIST,"<$monophones") || die ("Unable to open $monophones file for reading");
while(<HMMLIST>) {
    chop;
    print TREE "$command $threshold \"ST_$_"."_3_\" {(\"$_\",\"*-$_\+*\",\"$_\+*\",\"*-$_\").state[3]}\n";
}

open(HMMLIST,"<$monophones") || die ("Unable to open $monophones file for reading");
while(<HMMLIST>) {
    chop;
    print TREE "$command $threshold \"ST_$_"."_4_\" {(\"$_\",\"*-$_\+*\",\"$_\+*\",\"*-$_\").state[4]}\n";
}

print TREE "\n";
print TREE "TR 1\n";
print TREE "\n";
print TREE "AU \"fulllist\" \n";
print TREE "CO \"tiedlist\" \n";
print TREE "\n";
print TREE "ST \"trees\" \n";

close (HMMLIST);
